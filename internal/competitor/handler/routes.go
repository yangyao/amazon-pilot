// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.4

package handler

import (
	"net/http"

	"amazonpilot/internal/competitor/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.RateLimitMiddleware},
			[]rest.Route{
				{
					Method:  http.MethodGet,
					Path:    "/health",
					Handler: healthHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/ping",
					Handler: pingHandler(serverCtx),
				},
			}...,
		),
		rest.WithPrefix("/api/competitor"),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.RateLimitMiddleware},
			[]rest.Route{
				{
					Method:  http.MethodPost,
					Path:    "/analysis",
					Handler: createAnalysisGroupHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/analysis",
					Handler: listAnalysisGroupsHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/analysis/:analysis_id",
					Handler: getAnalysisResultsHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/analysis/:analysis_id/competitors",
					Handler: addCompetitorHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/analysis/:analysis_id/generate-report",
					Handler: generateReportHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/analysis/:analysis_id/generate-report-async",
					Handler: generateReportAsyncHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/analysis/:analysis_id/report-status",
					Handler: getReportStatusHandler(serverCtx),
				},
			}...,
		),
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
		rest.WithPrefix("/api/competitor"),
	)
}
