// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.4

package handler

import (
	"net/http"

	"amazonpilot/internal/product/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.RateLimitMiddleware},
			[]rest.Route{
				{
					Method:  http.MethodGet,
					Path:    "/health",
					Handler: healthHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/ping",
					Handler: pingHandler(serverCtx),
				},
			}...,
		),
		rest.WithPrefix("/api/product"),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.RateLimitMiddleware},
			[]rest.Route{
				{
					Method:  http.MethodPost,
					Path:    "/fetch-amazon-product-data",
					Handler: fetchAmazonProductDataHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/products/:product_id",
					Handler: getProductDetailsHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/products/:product_id/history",
					Handler: getProductHistoryHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/products/:product_id/refresh",
					Handler: refreshProductDataHandler(serverCtx),
				},
				{
					Method:  http.MethodDelete,
					Path:    "/products/:product_id/track",
					Handler: stopProductTrackingHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/products/anomaly-events",
					Handler: getAnomalyEventsHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/products/track",
					Handler: addProductTrackingHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/products/tracked",
					Handler: getTrackedProductsHandler(serverCtx),
				},
			}...,
		),
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
		rest.WithPrefix("/api/product"),
	)
}
