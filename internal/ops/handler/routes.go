// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.4

package handler

import (
	"net/http"

	"amazonpilot/internal/ops/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.RateLimitMiddleware},
			[]rest.Route{
				{
					Method:  http.MethodGet,
					Path:    "/health",
					Handler: healthHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/ping",
					Handler: pingHandler(serverCtx),
				},
			}...,
		),
		rest.WithPrefix("/ops"),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.RateLimitMiddleware},
			[]rest.Route{
				{
					Method:  http.MethodPost,
					Path:    "/database/query",
					Handler: queryDatabaseHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/demo/apify-fetch",
					Handler: fetchApifyDataHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/demo/setup",
					Handler: setupDemoDataHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/maintenance/run",
					Handler: runMaintenanceHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/services/restart",
					Handler: restartServiceHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/system/logs",
					Handler: getLogsHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/system/status",
					Handler: getSystemStatusHandler(serverCtx),
				},
			}...,
		),
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
		rest.WithPrefix("/ops"),
	)
}
