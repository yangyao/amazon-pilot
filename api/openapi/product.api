syntax = "v1"

info (
	title:   "Amazon Monitor Product Tracking API"
	desc:    "Product tracking and monitoring service for Amazon sellers"
	author:  "Amazon Pilot Team"
	email:   "team@amazon-pilot.com"
	version: "v1"
)

type (
	// Product tracking requests
	AddTrackingRequest {
		ASIN     string           `json:"asin"`
		Alias    string           `json:"alias,optional"`
		Category string           `json:"category,optional"`
		Settings TrackingSettings `json:"tracking_settings,optional"`
	}
	TrackingSettings {
		PriceChangeThreshold float64 `json:"price_change_threshold,default=10"`
		BSRChangeThreshold   float64 `json:"bsr_change_threshold,default=30"`
	}
	AddTrackingResponse {
		ProductID  string `json:"product_id"`
		ASIN       string `json:"asin"`
		Status     string `json:"status"`
		NextUpdate string `json:"next_update"`
	}
	// Get tracked products
	GetTrackedRequest {
		Page     int    `form:"page,default=1"`
		Limit    int    `form:"limit,default=20"`
		Category string `form:"category,optional"`
		Status   string `form:"status,optional"`
	}
	GetTrackedResponse {
		Tracked    []TrackedProduct `json:"tracked"`
		Pagination Pagination       `json:"pagination"`
	}
	TrackedProduct {
		ID               string           `json:"id"` // tracked_product.id
		ProductID        string           `json:"product_id"` // product.id (用于竞品分析)
		ASIN             string           `json:"asin"`
		Title            string           `json:"title,omitempty"`
		Brand            string           `json:"brand,omitempty"`
		Category         string           `json:"category,omitempty"`
		Alias            string           `json:"alias,omitempty"`
		CurrentPrice     float64          `json:"current_price"`
		Currency         string           `json:"currency"`
		BSR              int              `json:"bsr,omitempty"`
		BSRCategory      string           `json:"bsr_category,omitempty"`
		Rating           float64          `json:"rating,omitempty"`
		ReviewCount      int              `json:"review_count"`
		BuyBoxPrice      float64          `json:"buy_box_price,omitempty"`
		LastUpdated      string           `json:"last_updated"`
		Status           string           `json:"status"`
		Images           []string         `json:"images,omitempty"`
		Description      string           `json:"description,omitempty"`
		BulletPoints     []string         `json:"bullet_points,omitempty"`
		TrackingSettings TrackingSettings `json:"tracking_settings,omitempty"`
		HistorySummary   HistorySummary   `json:"history_summary,omitempty"`
	}
	HistorySummary {
		PriceChanges24h   float64 `json:"price_changes_24h"`
		BSRChanges24h     float64 `json:"bsr_changes_24h"`
		RatingChanges24h  float64 `json:"rating_changes_24h"`
		TotalPriceRecords int     `json:"total_price_records"`
		TotalBSRRecords   int     `json:"total_bsr_records"`
		FirstRecordedAt   string  `json:"first_recorded_at,omitempty"`
		LastPriceUpdate   string  `json:"last_price_update,omitempty"`
	}
	Pagination {
		Page       int `json:"page"`
		Limit      int `json:"limit"`
		Total      int `json:"total"`
		TotalPages int `json:"total_pages"`
	}
	// Product details
	GetProductRequest {
		ProductID string `path:"product_id"`
	}
	GetProductResponse {
		ID              string                 `json:"id"`
		ASIN            string                 `json:"asin"`
		Title           string                 `json:"title,omitempty"`
		Description     string                 `json:"description,omitempty"`
		Brand           string                 `json:"brand,omitempty"`
		Category        string                 `json:"category,omitempty"`
		CurrentPrice    float64                `json:"current_price"`
		Currency        string                 `json:"currency"`
		BSR             int                    `json:"bsr,omitempty"`
		Rating          float64                `json:"rating,omitempty"`
		ReviewCount     int                    `json:"review_count"`
		Images          []string               `json:"images,omitempty"`
		BulletPoints    []string               `json:"bullet_points,omitempty"`
		TrackingHistory TrackingHistorySummary `json:"tracking_history"`
		Alerts          []Alert                `json:"alerts,omitempty"`
	}
	TrackingHistorySummary {
		PriceChanges  int `json:"price_changes"`
		BSRChanges    int `json:"bsr_changes"`
		RatingChanges int `json:"rating_changes"`
	}
	Alert {
		Type      string `json:"type"`
		Message   string `json:"message"`
		CreatedAt string `json:"created_at"`
	}
	// Product history
	GetHistoryRequest {
		ProductID string `path:"product_id"`
		Metric    string `form:"metric,optional"`
		Period    string `form:"period,optional"`
	}
	GetHistoryResponse {
		ProductID string        `json:"product_id"`
		Metric    string        `json:"metric"`
		Period    string        `json:"period"`
		Data      []HistoryData `json:"data"`
	}
	HistoryData {
		Date     string  `json:"date"`
		Value    float64 `json:"value"`
		Currency string  `json:"currency,omitempty"`
	}
	// Stop tracking
	StopTrackingRequest {
		ProductID string `path:"product_id"`
	}
	StopTrackingResponse {
		Message string `json:"message"`
	}
	// Refresh product data
	RefreshProductDataRequest {
		ProductID string `path:"product_id"`
	}
	RefreshProductDataResponse {
		Success     bool           `json:"success"`
		Message     string         `json:"message"`
		ProductData TrackedProduct `json:"product_data,omitempty"`
	}
	// Anomaly events (异常检测事件 - 价格变动>10%, BSR变动>30%等)
	GetAnomalyEventsRequest {
		Page      int    `form:"page,default=1"`
		Limit     int    `form:"limit,default=20"`
		EventType string `form:"event_type,optional"` // price_change, bsr_change, rating_change, review_count_change, buybox_change
		Severity  string `form:"severity,optional"` // info, warning, critical
		ASIN      string `form:"asin,optional"`
	}
	GetAnomalyEventsResponse {
		Events     []AnomalyEvent `json:"events"`
		Pagination Pagination     `json:"pagination"`
	}
	AnomalyEvent {
		ID               string  `json:"id"`
		ProductID        string  `json:"product_id"`
		ASIN             string  `json:"asin"`
		EventType        string  `json:"event_type"`
		OldValue         float64 `json:"old_value,omitempty"`
		NewValue         float64 `json:"new_value,omitempty"`
		ChangePercentage float64 `json:"change_percentage,omitempty"`
		Threshold        float64 `json:"threshold,omitempty"`
		Severity         string  `json:"severity"`
		CreatedAt        string  `json:"created_at"`
		ProductTitle     string  `json:"product_title,omitempty"`
	}
	// Health check
	PingResponse {
		Status    string `json:"status"`
		Message   string `json:"message"`
		Timestamp int64  `json:"timestamp"`
	}
	HealthResponse {
		Service string `json:"service"`
		Status  string `json:"status"`
		Version string `json:"version"`
		Uptime  int64  `json:"uptime"`
	}
	// Apify data fetching
	FetchProductDataRequest {
		ASINs []string `json:"asins"`
		Force bool     `json:"force,optional"`
	}
	FetchProductDataResponse {
		Success       bool               `json:"success"`
		ProductsCount int                `json:"products_count"`
		Message       string             `json:"message"`
		Products      []ApifyProductData `json:"products,omitempty"`
	}
	ApifyProductData {
		ASIN         string   `json:"asin"`
		Title        string   `json:"title"`
		Brand        string   `json:"brand,omitempty"`
		Category     string   `json:"category,omitempty"`
		Price        float64  `json:"price"`
		Currency     string   `json:"currency"`
		Rating       float64  `json:"rating,omitempty"`
		ReviewCount  int      `json:"review_count,omitempty"`
		BSR          int      `json:"bsr,omitempty"`
		BSRCategory  string   `json:"bsr_category,omitempty"`
		Images       []string `json:"images,omitempty"`
		Description  string   `json:"description,omitempty"`
		BulletPoints []string `json:"bullet_points,omitempty"`
		Availability string   `json:"availability,omitempty"`
		Prime        bool     `json:"prime,omitempty"`
		Seller       string   `json:"seller,omitempty"`
		ScrapedAt    string   `json:"scraped_at"`
	}
)

@server (
	prefix:     /api/product
	middleware: RateLimitMiddleware
)
service product-api {
	// Health check endpoints (no auth required)
	@handler ping
	get /ping returns (PingResponse)

	@handler health
	get /health returns (HealthResponse)
}

@server (
	prefix:     /api/product
	jwt:        Auth
	middleware: RateLimitMiddleware
)
service product-api {
	// Apify data fetching
	@handler fetchAmazonProductData
	post /fetch-amazon-product-data (FetchProductDataRequest) returns (FetchProductDataResponse)

	// Product tracking endpoints (JWT required)
	@handler addProductTracking
	post /products/track (AddTrackingRequest) returns (AddTrackingResponse)

	@handler getTrackedProducts
	get /products/tracked (GetTrackedRequest) returns (GetTrackedResponse)

	@handler getProductDetails
	get /products/:product_id (GetProductRequest) returns (GetProductResponse)

	@handler getProductHistory
	get /products/:product_id/history (GetHistoryRequest) returns (GetHistoryResponse)

	@handler stopProductTracking
	delete /products/:product_id/track (StopTrackingRequest) returns (StopTrackingResponse)

	@handler refreshProductData
	post /products/:product_id/refresh (RefreshProductDataRequest) returns (RefreshProductDataResponse)

	@handler getAnomalyEvents
	get /products/anomaly-events (GetAnomalyEventsRequest) returns (GetAnomalyEventsResponse)
}

